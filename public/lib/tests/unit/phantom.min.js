/*! Jaime Eduardo Cribillero Diaz */
!function(){"use strict";function a(){var a=[].slice.call(arguments);alert(JSON.stringify(a))}QUnit.config.reorder=!1,QUnit.config.autorun=!1,QUnit.log(function(b){if("[object Object], undefined:undefined"!==b.message){var c,d;b.result||(c=QUnit.jsDump.parse(b.actual),d=QUnit.jsDump.parse(b.expected)),a("qunit.log",b.result,c,d,b.message,b.source)}}),QUnit.testStart(function(b){a("qunit.testStart",b.name)}),QUnit.testDone(function(b){a("qunit.testDone",b.name,b.failed,b.passed,b.total,b.duration)}),QUnit.moduleStart(function(b){a("qunit.moduleStart",b.name)}),QUnit.moduleDone(function(b){console.log(0===b.failed?'\r✔ All tests passed in "'+b.name+'" module':"✖ "+b.failed+' tests failed in "'+b.name+'" module'),a("qunit.moduleDone",b.name,b.failed,b.passed,b.total)}),QUnit.begin(function(){a("qunit.begin"),console.log("\n\nStarting test suite"),console.log("================================================\n")}),QUnit.done(function(b){a("qunit.done",b.failed,b.passed,b.total,b.runtime)})}(),!function(){"use strict";function a(){var a=[].slice.call(arguments);alert(JSON.stringify(a))}QUnit.config.reorder=!1,QUnit.config.autorun=!1,QUnit.log(function(b){if("[object Object], undefined:undefined"!==b.message){var c,d;b.result||(c=QUnit.jsDump.parse(b.actual),d=QUnit.jsDump.parse(b.expected)),a("qunit.log",b.result,c,d,b.message,b.source)}}),QUnit.testStart(function(b){a("qunit.testStart",b.name)}),QUnit.testDone(function(b){a("qunit.testDone",b.name,b.failed,b.passed,b.total,b.duration)}),QUnit.moduleStart(function(b){a("qunit.moduleStart",b.name)}),QUnit.moduleDone(function(b){console.log(0===b.failed?'\r✔ All tests passed in "'+b.name+'" module':"✖ "+b.failed+' tests failed in "'+b.name+'" module'),a("qunit.moduleDone",b.name,b.failed,b.passed,b.total)}),QUnit.begin(function(){a("qunit.begin"),console.log("\n\nStarting test suite"),console.log("================================================\n")}),QUnit.done(function(b){a("qunit.done",b.failed,b.passed,b.total,b.runtime)})}(),!function(){"use strict";function a(){var a=[].slice.call(arguments);alert(JSON.stringify(a))}QUnit.config.reorder=!1,QUnit.config.autorun=!1,QUnit.log(function(b){if("[object Object], undefined:undefined"!==b.message){var c,d;b.result||(c=QUnit.jsDump.parse(b.actual),d=QUnit.jsDump.parse(b.expected)),a("qunit.log",b.result,c,d,b.message,b.source)}}),QUnit.testStart(function(b){a("qunit.testStart",b.name)}),QUnit.testDone(function(b){a("qunit.testDone",b.name,b.failed,b.passed,b.total,b.duration)}),QUnit.moduleStart(function(b){a("qunit.moduleStart",b.name)}),QUnit.moduleDone(function(b){console.log(0===b.failed?'\r✔ All tests passed in "'+b.name+'" module':"✖ "+b.failed+' tests failed in "'+b.name+'" module'),a("qunit.moduleDone",b.name,b.failed,b.passed,b.total)}),QUnit.begin(function(){a("qunit.begin"),console.log("\n\nStarting test suite"),console.log("================================================\n")}),QUnit.done(function(b){a("qunit.done",b.failed,b.passed,b.total,b.runtime)})}();