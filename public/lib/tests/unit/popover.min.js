/*! Jaime Eduardo Cribillero Diaz */
$(function(){"use strict";module("popover plugin"),test("should be defined on jquery object",function(){ok($(document.body).popover,"popover method is defined")}),module("popover",{setup:function(){$.fn.bootstrapPopover=$.fn.popover.noConflict()},teardown:function(){$.fn.popover=$.fn.bootstrapPopover,delete $.fn.bootstrapPopover}}),test("should provide no conflict",function(){strictEqual($.fn.popover,void 0,"popover was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapPopover();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should render popover element",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover removed")}),test("should store popover instance in popover data object",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').bootstrapPopover();ok(a.data("bs.popover"),"popover instance exists")}),test("should store popover trigger in popover instance data object",function(){var a=$('<a href="#" title="ResentedHook">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapPopover();a.bootstrapPopover("show"),ok($(".popover").data("bs.popover"),"popover trigger stored in instance data")}),test("should get title and content from options",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:function(){return"@fat"},content:function(){return"loves writing tests （╯°□°）╯︵ ┻━┻"}});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@fat","title correctly inserted"),equal($(".popover .popover-content").text(),"loves writing tests （╯°□°）╯︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should not duplicate HTML object",function(){var a=$("<div/>").html("loves writing tests （╯°□°）╯︵ ┻━┻"),b=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({content:function(){return a}});b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed"),b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover().bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes ignoring options passed via js",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"ignored title option",content:"ignored content option"}).bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should respect custom template",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"Test",content:"Test",template:'<div class="popover foobar"><div class="arrow"></div><div class="inner"><h3 class="title"/><div class="content"><p/></div></div></div>'});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),ok($(".popover").hasClass("foobar"),"custom class is present"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should destroy popover",function(){var a=$("<div/>").bootstrapPopover({trigger:"hover"}).on("click.foo",$.noop);ok(a.data("bs.popover"),"popover has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"popover has hover event"),equal($._data(a[0],"events").click[0].namespace,"foo","popover has extra click.foo event"),a.bootstrapPopover("show"),a.bootstrapPopover("destroy"),ok(!a.hasClass("in"),"popover is hidden"),ok(!a.data("popover"),"popover does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","popover still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"popover does not have any events")}),test("should render popover element using delegated selector",function(){var a=$('<div><a href="#" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>').appendTo("#qunit-fixture").bootstrapPopover({selector:"a",trigger:"click"});a.find("a").click(),notEqual($(".popover").length,0,"popover was inserted"),a.find("a").click(),equal($(".popover").length,0,"popover was removed")}),test("should render popover elements using different delegated selectors on the same node",function(){var a='<div><a href="#" class="first" title="mdo" data-content="http://twitter.com/mdo">@mdo</a><a href="#" class="second" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>',b=$(a).appendTo("#qunit-fixture").bootstrapPopover({selector:"a.first",trigger:"click"}).bootstrapPopover({selector:"a.second",trigger:"click"});b.find("a.first").click(),notEqual($(".popover").length,0,"first popover was inserted"),b.find("a.first").click(),equal($(".popover").length,0,"first popover removed"),b.find("a.second").click(),notEqual($(".popover").length,0,"second popover was inserted"),b.find("a.second").click(),equal($(".popover").length,0,"second popover removed")})}),$(function(){"use strict";module("popover plugin"),test("should be defined on jquery object",function(){ok($(document.body).popover,"popover method is defined")}),module("popover",{setup:function(){$.fn.bootstrapPopover=$.fn.popover.noConflict()},teardown:function(){$.fn.popover=$.fn.bootstrapPopover,delete $.fn.bootstrapPopover}}),test("should provide no conflict",function(){strictEqual($.fn.popover,void 0,"popover was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapPopover();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should render popover element",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover removed")}),test("should store popover instance in popover data object",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').bootstrapPopover();ok(a.data("bs.popover"),"popover instance exists")}),test("should store popover trigger in popover instance data object",function(){var a=$('<a href="#" title="ResentedHook">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapPopover();a.bootstrapPopover("show"),ok($(".popover").data("bs.popover"),"popover trigger stored in instance data")}),test("should get title and content from options",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:function(){return"@fat"},content:function(){return"loves writing tests （╯°□°）╯︵ ┻━┻"}});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@fat","title correctly inserted"),equal($(".popover .popover-content").text(),"loves writing tests （╯°□°）╯︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should not duplicate HTML object",function(){var a=$("<div/>").html("loves writing tests （╯°□°）╯︵ ┻━┻"),b=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({content:function(){return a}});b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed"),b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover().bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes ignoring options passed via js",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"ignored title option",content:"ignored content option"}).bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should respect custom template",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"Test",content:"Test",template:'<div class="popover foobar"><div class="arrow"></div><div class="inner"><h3 class="title"/><div class="content"><p/></div></div></div>'});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),ok($(".popover").hasClass("foobar"),"custom class is present"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should destroy popover",function(){var a=$("<div/>").bootstrapPopover({trigger:"hover"}).on("click.foo",$.noop);ok(a.data("bs.popover"),"popover has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"popover has hover event"),equal($._data(a[0],"events").click[0].namespace,"foo","popover has extra click.foo event"),a.bootstrapPopover("show"),a.bootstrapPopover("destroy"),ok(!a.hasClass("in"),"popover is hidden"),ok(!a.data("popover"),"popover does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","popover still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"popover does not have any events")}),test("should render popover element using delegated selector",function(){var a=$('<div><a href="#" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>').appendTo("#qunit-fixture").bootstrapPopover({selector:"a",trigger:"click"});a.find("a").click(),notEqual($(".popover").length,0,"popover was inserted"),a.find("a").click(),equal($(".popover").length,0,"popover was removed")}),test("should render popover elements using different delegated selectors on the same node",function(){var a='<div><a href="#" class="first" title="mdo" data-content="http://twitter.com/mdo">@mdo</a><a href="#" class="second" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>',b=$(a).appendTo("#qunit-fixture").bootstrapPopover({selector:"a.first",trigger:"click"}).bootstrapPopover({selector:"a.second",trigger:"click"});b.find("a.first").click(),notEqual($(".popover").length,0,"first popover was inserted"),b.find("a.first").click(),equal($(".popover").length,0,"first popover removed"),b.find("a.second").click(),notEqual($(".popover").length,0,"second popover was inserted"),b.find("a.second").click(),equal($(".popover").length,0,"second popover removed")})}),$(function(){"use strict";module("popover plugin"),test("should be defined on jquery object",function(){ok($(document.body).popover,"popover method is defined")}),module("popover",{setup:function(){$.fn.bootstrapPopover=$.fn.popover.noConflict()},teardown:function(){$.fn.popover=$.fn.bootstrapPopover,delete $.fn.bootstrapPopover}}),test("should provide no conflict",function(){strictEqual($.fn.popover,void 0,"popover was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapPopover();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should render popover element",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover removed")}),test("should store popover instance in popover data object",function(){var a=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').bootstrapPopover();ok(a.data("bs.popover"),"popover instance exists")}),test("should store popover trigger in popover instance data object",function(){var a=$('<a href="#" title="ResentedHook">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapPopover();a.bootstrapPopover("show"),ok($(".popover").data("bs.popover"),"popover trigger stored in instance data")}),test("should get title and content from options",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:function(){return"@fat"},content:function(){return"loves writing tests （╯°□°）╯︵ ┻━┻"}});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@fat","title correctly inserted"),equal($(".popover .popover-content").text(),"loves writing tests （╯°□°）╯︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should not duplicate HTML object",function(){var a=$("<div/>").html("loves writing tests （╯°□°）╯︵ ┻━┻"),b=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({content:function(){return a}});b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed"),b.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-content").html(),a,"content correctly inserted"),b.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover().bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should get title and content from attributes ignoring options passed via js",function(){var a=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"ignored title option",content:"ignored content option"}).bootstrapPopover("show");notEqual($(".popover").length,0,"popover was inserted"),equal($(".popover .popover-title").text(),"@mdo","title correctly inserted"),equal($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should respect custom template",function(){var a=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"Test",content:"Test",template:'<div class="popover foobar"><div class="arrow"></div><div class="inner"><h3 class="title"/><div class="content"><p/></div></div></div>'});a.bootstrapPopover("show"),notEqual($(".popover").length,0,"popover was inserted"),ok($(".popover").hasClass("foobar"),"custom class is present"),a.bootstrapPopover("hide"),equal($(".popover").length,0,"popover was removed")}),test("should destroy popover",function(){var a=$("<div/>").bootstrapPopover({trigger:"hover"}).on("click.foo",$.noop);ok(a.data("bs.popover"),"popover has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"popover has hover event"),equal($._data(a[0],"events").click[0].namespace,"foo","popover has extra click.foo event"),a.bootstrapPopover("show"),a.bootstrapPopover("destroy"),ok(!a.hasClass("in"),"popover is hidden"),ok(!a.data("popover"),"popover does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","popover still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"popover does not have any events")}),test("should render popover element using delegated selector",function(){var a=$('<div><a href="#" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>').appendTo("#qunit-fixture").bootstrapPopover({selector:"a",trigger:"click"});a.find("a").click(),notEqual($(".popover").length,0,"popover was inserted"),a.find("a").click(),equal($(".popover").length,0,"popover was removed")}),test("should render popover elements using different delegated selectors on the same node",function(){var a='<div><a href="#" class="first" title="mdo" data-content="http://twitter.com/mdo">@mdo</a><a href="#" class="second" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>',b=$(a).appendTo("#qunit-fixture").bootstrapPopover({selector:"a.first",trigger:"click"}).bootstrapPopover({selector:"a.second",trigger:"click"});b.find("a.first").click(),notEqual($(".popover").length,0,"first popover was inserted"),b.find("a.first").click(),equal($(".popover").length,0,"first popover removed"),b.find("a.second").click(),notEqual($(".popover").length,0,"second popover was inserted"),b.find("a.second").click(),equal($(".popover").length,0,"second popover removed")})});