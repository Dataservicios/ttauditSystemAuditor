/*! Jaime Eduardo Cribillero Diaz */
$(function(){"use strict";module("button plugin"),test("should be defined on jquery object",function(){ok($(document.body).button,"button method is defined")}),module("button",{setup:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},teardown:function(){$.fn.button=$.fn.bootstrapButton,delete $.fn.bootstrapButton}}),test("should provide no conflict",function(){strictEqual($.fn.button,void 0,"button was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapButton();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should return set state to loading",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start()},0)}),test("should return reset state",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"mdo","btn text equals mdo"),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should work with an empty string as reset state",function(){var a=$('<button class="btn" data-loading-text="fat"/>');equal(a.html(),"",'btn text equals ""'),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"",'btn text equals ""'),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should toggle active",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>');ok(!a.hasClass("active"),"btn does not have active class"),a.bootstrapButton("toggle"),ok(a.hasClass("active"),"btn has class active")}),test("should toggle active when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),ok(!a.hasClass("active"),"btn does not have active class"),b.click(),ok(a.hasClass("active"),"btn has class active")}),test("should toggle aria-pressed",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),a.bootstrapButton("toggle"),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle aria-pressed when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),b.click(),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle active when btn children are clicked within btn-group",function(){var a=$('<div class="btn-group" data-toggle="buttons"/>'),b=$('<button class="btn">fat</button>'),c=$("<i/>");a.append(b.append(c)).appendTo("#qunit-fixture"),ok(!b.hasClass("active"),"btn does not have active class"),c.click(),ok(b.hasClass("active"),"btn has class active")}),test("should check for closest matching toggle",function(){var a='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>',b=$(a).appendTo("#qunit-fixture"),c=b.children().eq(0),d=b.children().eq(1);ok(c.hasClass("active"),"btn1 has active class"),ok(c.find("input").prop("checked"),"btn1 is checked"),ok(!d.hasClass("active"),"btn2 does not have active class"),ok(!d.find("input").prop("checked"),"btn2 is not checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked")})}),$(function(){"use strict";module("button plugin"),test("should be defined on jquery object",function(){ok($(document.body).button,"button method is defined")}),module("button",{setup:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},teardown:function(){$.fn.button=$.fn.bootstrapButton,delete $.fn.bootstrapButton}}),test("should provide no conflict",function(){strictEqual($.fn.button,void 0,"button was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapButton();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should return set state to loading",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start()},0)}),test("should return reset state",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"mdo","btn text equals mdo"),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should work with an empty string as reset state",function(){var a=$('<button class="btn" data-loading-text="fat"/>');equal(a.html(),"",'btn text equals ""'),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"",'btn text equals ""'),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should toggle active",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>');ok(!a.hasClass("active"),"btn does not have active class"),a.bootstrapButton("toggle"),ok(a.hasClass("active"),"btn has class active")}),test("should toggle active when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),ok(!a.hasClass("active"),"btn does not have active class"),b.click(),ok(a.hasClass("active"),"btn has class active")}),test("should toggle aria-pressed",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),a.bootstrapButton("toggle"),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle aria-pressed when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),b.click(),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle active when btn children are clicked within btn-group",function(){var a=$('<div class="btn-group" data-toggle="buttons"/>'),b=$('<button class="btn">fat</button>'),c=$("<i/>");a.append(b.append(c)).appendTo("#qunit-fixture"),ok(!b.hasClass("active"),"btn does not have active class"),c.click(),ok(b.hasClass("active"),"btn has class active")}),test("should check for closest matching toggle",function(){var a='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>',b=$(a).appendTo("#qunit-fixture"),c=b.children().eq(0),d=b.children().eq(1);ok(c.hasClass("active"),"btn1 has active class"),ok(c.find("input").prop("checked"),"btn1 is checked"),ok(!d.hasClass("active"),"btn2 does not have active class"),ok(!d.find("input").prop("checked"),"btn2 is not checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked")})}),$(function(){"use strict";module("button plugin"),test("should be defined on jquery object",function(){ok($(document.body).button,"button method is defined")}),module("button",{setup:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},teardown:function(){$.fn.button=$.fn.bootstrapButton,delete $.fn.bootstrapButton}}),test("should provide no conflict",function(){strictEqual($.fn.button,void 0,"button was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapButton();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should return set state to loading",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start()},0)}),test("should return reset state",function(){var a=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(a.html(),"mdo","btn text equals mdo"),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"mdo","btn text equals mdo"),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should work with an empty string as reset state",function(){var a=$('<button class="btn" data-loading-text="fat"/>');equal(a.html(),"",'btn text equals ""'),a.bootstrapButton("loading"),stop(),setTimeout(function(){equal(a.html(),"fat","btn text equals fat"),ok(a[0].hasAttribute("disabled"),"btn is disabled"),ok(a.hasClass("disabled"),"btn has disabled class"),start(),stop(),a.bootstrapButton("reset"),setTimeout(function(){equal(a.html(),"",'btn text equals ""'),ok(!a[0].hasAttribute("disabled"),"btn is not disabled"),ok(!a.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should toggle active",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>');ok(!a.hasClass("active"),"btn does not have active class"),a.bootstrapButton("toggle"),ok(a.hasClass("active"),"btn has class active")}),test("should toggle active when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button">mdo</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),ok(!a.hasClass("active"),"btn does not have active class"),b.click(),ok(a.hasClass("active"),"btn has class active")}),test("should toggle aria-pressed",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),a.bootstrapButton("toggle"),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle aria-pressed when btn children are clicked",function(){var a=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>'),b=$("<i/>");a.append(b).appendTo("#qunit-fixture"),equal(a.attr("aria-pressed"),"false","btn aria-pressed state is false"),b.click(),equal(a.attr("aria-pressed"),"true","btn aria-pressed state is true")}),test("should toggle active when btn children are clicked within btn-group",function(){var a=$('<div class="btn-group" data-toggle="buttons"/>'),b=$('<button class="btn">fat</button>'),c=$("<i/>");a.append(b.append(c)).appendTo("#qunit-fixture"),ok(!b.hasClass("active"),"btn does not have active class"),c.click(),ok(b.hasClass("active"),"btn has class active")}),test("should check for closest matching toggle",function(){var a='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>',b=$(a).appendTo("#qunit-fixture"),c=b.children().eq(0),d=b.children().eq(1);ok(c.hasClass("active"),"btn1 has active class"),ok(c.find("input").prop("checked"),"btn1 is checked"),ok(!d.hasClass("active"),"btn2 does not have active class"),ok(!d.find("input").prop("checked"),"btn2 is not checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked"),d.find("input").click(),ok(!c.hasClass("active"),"btn1 does not have active class"),ok(!c.find("input").prop("checked"),"btn1 is checked"),ok(d.hasClass("active"),"btn2 has active class"),ok(d.find("input").prop("checked"),"btn2 is checked")})});