/*! Jaime Eduardo Cribillero Diaz */
$(function(){"use strict";module("tooltip plugin"),test("should be defined on jquery object",function(){ok($(document.body).tooltip,"popover method is defined")}),module("tooltip",{setup:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},teardown:function(){$.fn.tooltip=$.fn.bootstrapTooltip,delete $.fn.bootstrapTooltip}}),test("should provide no conflict",function(){strictEqual($.fn.tooltip,void 0,"tooltip was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapTooltip();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should expose default settings",function(){ok($.fn.bootstrapTooltip.Constructor.DEFAULTS,"defaults is defined")}),test("should empty title attribute",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("title"),"","title attribute was emptied")}),test("should add data attribute for referencing original title",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")}),test("should add aria-describedby to the trigger on show",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show"),b=$(".tooltip").attr("id");strictEqual($("#"+b).length,1,"has a unique id"),strictEqual($(".tooltip").attr("aria-describedby"),a.attr("id"),"tooltip id and aria-describedby on trigger match"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")}),test("should remove aria-describedby from trigger on hide",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");a.bootstrapTooltip("show"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby"),a.bootstrapTooltip("hide"),ok(!a[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")}),test("should assign a unique id tooltip element",function(){$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var a=$(".tooltip").attr("id");strictEqual($("#"+a).length,1,"tooltip has unique id"),strictEqual(a.indexOf("tooltip"),0,"tooltip id has prefix")}),test("should place tooltips relative to placement option",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});a.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should allow html entities",function(){var a=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0});a.bootstrapTooltip("show"),notEqual($(".tooltip b").length,0,"b tag was inserted"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should respect custom classes",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});a.bootstrapTooltip("show"),ok($(".tooltip").hasClass("some-class"),"custom class is present"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should fire show event",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){ok(!0,"show event fired"),start()}).bootstrapTooltip("show")}),test("should fire shown event",function(){stop(),$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){ok(!0,"shown was called"),start()}).bootstrapTooltip("show")}),test("should not fire shown event when show was prevented",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(a){a.preventDefault(),ok(!0,"show event fired"),start()}).on("shown.bs.tooltip",function(){ok(!1,"shown event fired")}).bootstrapTooltip("show")}),test("should fire hide event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){ok(!0,"hide event fired"),start()}).bootstrapTooltip("show")}),test("should fire hidden event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){ok(!0,"hidden event fired"),start()}).bootstrapTooltip("show")}),test("should not fire hidden event when hide was prevented",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(a){a.preventDefault(),ok(!0,"hide event fired"),start()}).on("hidden.bs.tooltip",function(){ok(!1,"hidden event fired")}).bootstrapTooltip("show")}),test("should destroy tooltip",function(){var a=$("<div/>").bootstrapTooltip().on("click.foo",function(){});ok(a.data("bs.tooltip"),"tooltip has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"tooltip has hover events"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event"),a.bootstrapTooltip("show"),a.bootstrapTooltip("destroy"),ok(!a.hasClass("in"),"tooltip is hidden"),ok(!$._data(a[0],"bs.tooltip"),"tooltip does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"tooltip does not have hover events")}),test("should show tooltip with delegate selector on click",function(){var a=$('<div><a href="#" rel="tooltip" title="Another tooltip"/></div>').appendTo("#qunit-fixture").bootstrapTooltip({selector:'a[rel="tooltip"]',trigger:"click"});a.find("a").click(),ok($(".tooltip").is(".fade.in"),"tooltip is faded in"),a.find("a").click(),equal($(".tooltip").length,0,"tooltip was removed from dom")}),test("should show tooltips with different delegate selectors on the same node on click",function(){var a='<div><a href="#" class="first" rel="tooltip" title="First delegated tooltip"/><a href="#" class="second" rel="tooltip" title="Second delegated tooltip"/></div>',b=$(a).append().appendTo("#qunit-fixture").bootstrapTooltip({selector:'a.first[rel="tooltip"]',trigger:"click"}).bootstrapTooltip({selector:'a.second[rel="tooltip"]',trigger:"click"});b.find("a.first").click(),ok($(".tooltip").is(".fade.in"),"first tooltip is faded in"),b.find("a.first").click(),equal($(".tooltip").length,0,"first tooltip was removed from dom"),b.find("a.second").click(),ok($(".tooltip").is(".fade.in"),"second tooltip is faded in"),b.find("a.second").click(),equal($(".tooltip").length,0,"second tooltip was removed from dom")}),test("should show tooltip when toggle is called",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle"),ok($(".tooltip").is(".fade.in"),"tooltip is faded in")}),test("should hide previously shown tooltip when toggle is called on tooltip",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show"),$(".tooltip").bootstrapTooltip("toggle"),ok($(".tooltip").not(".fade.in"),"tooltip was faded out")}),test("should place tooltips inside body when container is body",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body"),equal($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent"),a.bootstrapTooltip("hide"),equal($("body > .tooltip").length,0,"tooltip was removed from dom")}),test("should add position class before positioning so that position-specific styles are taken into account",function(){var a="<style>.tooltip.right { white-space: nowrap; }.tooltip.right .tooltip-inner { max-width: none; }</style>",b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:null}).bootstrapTooltip("show"),e=c.find(".tooltip"),f=Math.round(d.offset().top+d[0].offsetHeight/2-e[0].offsetHeight/2),g=Math.round(e.offset().top),h=f-g;ok(1>=h&&h>=-1),d.bootstrapTooltip("hide"),c.remove(),b.remove()}),test("should use title attribute for tooltip text",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should prefer title attribute over title option",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should use title option",function(){var a=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should be placed dynamically with the dynamic placement option",function(){var a=$('<style> a[rel="tooltip"] { display: inline-block; position: absolute; } </style>'),b=$("<div/>").css({position:"absolute",overflow:"hidden",width:600,height:400,top:0,left:0}).appendTo(document.body),c=$('<div style="left: 0; top: 0;" rel="tooltip" title="Top tooltip">Top Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto"});c.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"top positioned tooltip removed from dom");var d=$('<div style="right: 0;" rel="tooltip" title="Right tooltip">Right Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"right auto"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".left"),"right positioned tooltip is dynamically positioned left"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"right positioned tooltip removed from dom");var e=$('<div style="left: 0;" rel="tooltip" title="Left tooltip">Left Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto left"});e.bootstrapTooltip("show"),ok($(".tooltip").is(".right"),"left positioned tooltip is dynamically positioned right"),e.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"left positioned tooltip removed from dom"),b.remove(),a.remove()}),test('should position tip on top if viewport has enough space and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; padding-top: 50px }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".top"),"top positioned tooltip is dynamically positioned to top"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should position tip on bottom if the tip\'s dimension exceeds the viewport area and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport has enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(100),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport doesn\'t have enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { padding: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport has enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.spacer { height: 400px; }.spacer:first-child { height: 200px; }.tooltip-item { width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).before('<div class="spacer"/>').after('<div class="spacer"/>').bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport doesn\'t have enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin-top: 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(400),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the top of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),equal(Math.round(c.find(".tooltip").offset().top),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the bottom of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="bottom: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().top),Math.round($(window).height()-12-e[0].offsetHeight)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the left of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),strictEqual(Math.round(c.find(".tooltip").offset().left),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the right of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("body"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; right: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round($(window).width()-12-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip when up against the right of an arbitrary viewport",function(){var a='<style>.tooltip, .tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }.container-viewport { position: absolute; top: 50px; left: 60px; width: 300px; height: 300px; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$('<div class="container-viewport"/>').appendTo(document.body),d=$('<a href="#" rel="tooltip" title="tip" style="top: 50px; left: 350px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:".container-viewport"});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round(60+c.width()-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should not error when trying to show an auto-placed tooltip that has been removed from the dom",function(){var a=!0,b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"auto"});try{b.bootstrapTooltip("show")}catch(c){a=!1,console.log(c)}ok(a,".tooltip('show') should not throw an error if element no longer is in dom")}),test("should place tooltip on top of element",function(){stop();var a='<div><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>',b=$(a).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture"),c=b.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:!1}).bootstrapTooltip("show"),d=b.find(".tooltip");setTimeout(function(){ok(Math.round(d.offset().top+d.outerHeight())<=Math.round(c.offset().top)),start()},0)}),test("should place tooltip inside viewport",function(){stop();var a=$("<div/>").css({position:"absolute",width:200,height:200,bottom:0,left:0}).appendTo("#qunit-fixture");$('<a href="#" title="Very very very very very very very very long tooltip">Hover me</a>').css({position:"absolute",top:0,left:0}).appendTo(a).bootstrapTooltip({placement:"top"}).bootstrapTooltip("show"),setTimeout(function(){ok($(".tooltip").offset().left>=0),start()},0)}),test("should show tooltip if leave event hasn't occurred before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip is not faded in")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip is faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok($(".tooltip").is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"100ms: tooltip still faded in"),a.trigger("mouseenter")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip still faded in"),start()},200)},0),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"250ms: tooltip not faded in"),start()},250),a.trigger("mouseenter")}),test("should wait 200ms before hiding the tooltip",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"100ms: tooltip still faded in")},100),setTimeout(function(){ok(!a.data("bs.tooltip").$tip.is(".in"),"200ms: tooltip removed"),start()},200)},0),a.trigger("mouseenter")}),test("should correctly position tooltips on SVG elements",function(){if(!window.SVGElement)return void expect(0);stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<div style="position: fixed; top: 0; left: 0;">  <svg width="200" height="200">    <circle cx="100" cy="100" r="10" title="m" id="theCircle" />  </svg></div>');var c=$("#theCircle");c.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();b.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should correctly determine auto placement based on container rather than parent",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; display: block; font-size: 12px; line-height: 1.4; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; font-family: Helvetica; text-align: center; }#trigger-parent {  position: fixed;  top: 100px;  right: 17px;}</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<span id="trigger-parent"><a id="tt-trigger" title="If a_larger_text is written here, it won\'t fit using older broken version of BS">HOVER OVER ME</a></span>');var c=$("#tt-trigger");c.on("shown.bs.tooltip",function(){var a=$(".tooltip-inner"),b=a.offset().left+a.width(),d=c.offset().left;ok(d>b,"tooltip with auto left placement, when near the right edge of the viewport, gets left placement"),c.bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"auto left",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should not reload the tooltip on subsequent mouseenter events",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a}),$("#tt-outer").trigger("mouseenter");var c=$("#tt-content").text();$("#tt-content").trigger("mouseenter"),equal(c,$("#tt-content").text())}),test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a});var c=b.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var d=$("#tt-content").text();$("#tt-outer").trigger("mouseleave"),equal(d,$("#tt-content").text()),ok("out"==c.hoverState,'the tooltip hoverState should be set to "out"'),$("#tt-content").trigger("mouseenter"),ok("in"==c.hoverState,'the tooltip hoverState should be set to "in"'),equal(d,$("#tt-content").text())}),test("should position arrow correctly when tooltip is moved to not appear offscreen",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip-arrow { position: absolute; width: 0; height: 0; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; }</style>",b=$(a).appendTo("head");$('<a href="#" title="tooltip title" style="position: absolute; bottom: 0; right: 0;">Foobar</a>').appendTo("body").on("shown.bs.tooltip",function(){var a=$(this).data("bs.tooltip").$tip.find(".tooltip-arrow").attr("style");ok(/left/i.test(a)&&!/top/i.test(a),"arrow positioned correctly"),$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}).bootstrapTooltip("show")}),test("should correctly position tooltips on transformed elements",function(){var a=document.documentElement.style;if(!("transform"in a||"webkitTransform"in a||"msTransform"in a))return void expect(0);stop();var b="<style>#qunit-fixture { top: 0; left: 0; }.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }#target { position: absolute; top: 100px; left: 50px; width: 100px; height: 200px; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }</style>",c=$(b).appendTo("head"),d=$('<div id="target" title="1"/>').appendTo("#qunit-fixture");d.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();c.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),ok(Math.abs(a.top-126)<=1,"tooltip has correct vertical location"),d.bootstrapTooltip("hide"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),d.bootstrapTooltip("show")})}),$(function(){"use strict";module("tooltip plugin"),test("should be defined on jquery object",function(){ok($(document.body).tooltip,"popover method is defined")}),module("tooltip",{setup:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},teardown:function(){$.fn.tooltip=$.fn.bootstrapTooltip,delete $.fn.bootstrapTooltip}}),test("should provide no conflict",function(){strictEqual($.fn.tooltip,void 0,"tooltip was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapTooltip();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should expose default settings",function(){ok($.fn.bootstrapTooltip.Constructor.DEFAULTS,"defaults is defined")}),test("should empty title attribute",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("title"),"","title attribute was emptied")}),test("should add data attribute for referencing original title",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")}),test("should add aria-describedby to the trigger on show",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show"),b=$(".tooltip").attr("id");strictEqual($("#"+b).length,1,"has a unique id"),strictEqual($(".tooltip").attr("aria-describedby"),a.attr("id"),"tooltip id and aria-describedby on trigger match"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")}),test("should remove aria-describedby from trigger on hide",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");a.bootstrapTooltip("show"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby"),a.bootstrapTooltip("hide"),ok(!a[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")}),test("should assign a unique id tooltip element",function(){$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var a=$(".tooltip").attr("id");strictEqual($("#"+a).length,1,"tooltip has unique id"),strictEqual(a.indexOf("tooltip"),0,"tooltip id has prefix")}),test("should place tooltips relative to placement option",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});
a.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should allow html entities",function(){var a=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0});a.bootstrapTooltip("show"),notEqual($(".tooltip b").length,0,"b tag was inserted"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should respect custom classes",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});a.bootstrapTooltip("show"),ok($(".tooltip").hasClass("some-class"),"custom class is present"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should fire show event",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){ok(!0,"show event fired"),start()}).bootstrapTooltip("show")}),test("should fire shown event",function(){stop(),$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){ok(!0,"shown was called"),start()}).bootstrapTooltip("show")}),test("should not fire shown event when show was prevented",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(a){a.preventDefault(),ok(!0,"show event fired"),start()}).on("shown.bs.tooltip",function(){ok(!1,"shown event fired")}).bootstrapTooltip("show")}),test("should fire hide event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){ok(!0,"hide event fired"),start()}).bootstrapTooltip("show")}),test("should fire hidden event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){ok(!0,"hidden event fired"),start()}).bootstrapTooltip("show")}),test("should not fire hidden event when hide was prevented",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(a){a.preventDefault(),ok(!0,"hide event fired"),start()}).on("hidden.bs.tooltip",function(){ok(!1,"hidden event fired")}).bootstrapTooltip("show")}),test("should destroy tooltip",function(){var a=$("<div/>").bootstrapTooltip().on("click.foo",function(){});ok(a.data("bs.tooltip"),"tooltip has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"tooltip has hover events"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event"),a.bootstrapTooltip("show"),a.bootstrapTooltip("destroy"),ok(!a.hasClass("in"),"tooltip is hidden"),ok(!$._data(a[0],"bs.tooltip"),"tooltip does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"tooltip does not have hover events")}),test("should show tooltip with delegate selector on click",function(){var a=$('<div><a href="#" rel="tooltip" title="Another tooltip"/></div>').appendTo("#qunit-fixture").bootstrapTooltip({selector:'a[rel="tooltip"]',trigger:"click"});a.find("a").click(),ok($(".tooltip").is(".fade.in"),"tooltip is faded in"),a.find("a").click(),equal($(".tooltip").length,0,"tooltip was removed from dom")}),test("should show tooltips with different delegate selectors on the same node on click",function(){var a='<div><a href="#" class="first" rel="tooltip" title="First delegated tooltip"/><a href="#" class="second" rel="tooltip" title="Second delegated tooltip"/></div>',b=$(a).append().appendTo("#qunit-fixture").bootstrapTooltip({selector:'a.first[rel="tooltip"]',trigger:"click"}).bootstrapTooltip({selector:'a.second[rel="tooltip"]',trigger:"click"});b.find("a.first").click(),ok($(".tooltip").is(".fade.in"),"first tooltip is faded in"),b.find("a.first").click(),equal($(".tooltip").length,0,"first tooltip was removed from dom"),b.find("a.second").click(),ok($(".tooltip").is(".fade.in"),"second tooltip is faded in"),b.find("a.second").click(),equal($(".tooltip").length,0,"second tooltip was removed from dom")}),test("should show tooltip when toggle is called",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle"),ok($(".tooltip").is(".fade.in"),"tooltip is faded in")}),test("should hide previously shown tooltip when toggle is called on tooltip",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show"),$(".tooltip").bootstrapTooltip("toggle"),ok($(".tooltip").not(".fade.in"),"tooltip was faded out")}),test("should place tooltips inside body when container is body",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body"),equal($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent"),a.bootstrapTooltip("hide"),equal($("body > .tooltip").length,0,"tooltip was removed from dom")}),test("should add position class before positioning so that position-specific styles are taken into account",function(){var a="<style>.tooltip.right { white-space: nowrap; }.tooltip.right .tooltip-inner { max-width: none; }</style>",b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:null}).bootstrapTooltip("show"),e=c.find(".tooltip"),f=Math.round(d.offset().top+d[0].offsetHeight/2-e[0].offsetHeight/2),g=Math.round(e.offset().top),h=f-g;ok(1>=h&&h>=-1),d.bootstrapTooltip("hide"),c.remove(),b.remove()}),test("should use title attribute for tooltip text",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should prefer title attribute over title option",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should use title option",function(){var a=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should be placed dynamically with the dynamic placement option",function(){var a=$('<style> a[rel="tooltip"] { display: inline-block; position: absolute; } </style>'),b=$("<div/>").css({position:"absolute",overflow:"hidden",width:600,height:400,top:0,left:0}).appendTo(document.body),c=$('<div style="left: 0; top: 0;" rel="tooltip" title="Top tooltip">Top Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto"});c.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"top positioned tooltip removed from dom");var d=$('<div style="right: 0;" rel="tooltip" title="Right tooltip">Right Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"right auto"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".left"),"right positioned tooltip is dynamically positioned left"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"right positioned tooltip removed from dom");var e=$('<div style="left: 0;" rel="tooltip" title="Left tooltip">Left Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto left"});e.bootstrapTooltip("show"),ok($(".tooltip").is(".right"),"left positioned tooltip is dynamically positioned right"),e.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"left positioned tooltip removed from dom"),b.remove(),a.remove()}),test('should position tip on top if viewport has enough space and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; padding-top: 50px }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".top"),"top positioned tooltip is dynamically positioned to top"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should position tip on bottom if the tip\'s dimension exceeds the viewport area and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport has enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(100),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport doesn\'t have enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { padding: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport has enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.spacer { height: 400px; }.spacer:first-child { height: 200px; }.tooltip-item { width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).before('<div class="spacer"/>').after('<div class="spacer"/>').bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport doesn\'t have enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin-top: 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(400),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the top of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),equal(Math.round(c.find(".tooltip").offset().top),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the bottom of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="bottom: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().top),Math.round($(window).height()-12-e[0].offsetHeight)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the left of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),strictEqual(Math.round(c.find(".tooltip").offset().left),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the right of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("body"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; right: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round($(window).width()-12-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip when up against the right of an arbitrary viewport",function(){var a='<style>.tooltip, .tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }.container-viewport { position: absolute; top: 50px; left: 60px; width: 300px; height: 300px; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$('<div class="container-viewport"/>').appendTo(document.body),d=$('<a href="#" rel="tooltip" title="tip" style="top: 50px; left: 350px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:".container-viewport"});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round(60+c.width()-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should not error when trying to show an auto-placed tooltip that has been removed from the dom",function(){var a=!0,b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"auto"});try{b.bootstrapTooltip("show")}catch(c){a=!1,console.log(c)}ok(a,".tooltip('show') should not throw an error if element no longer is in dom")}),test("should place tooltip on top of element",function(){stop();var a='<div><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>',b=$(a).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture"),c=b.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:!1}).bootstrapTooltip("show"),d=b.find(".tooltip");setTimeout(function(){ok(Math.round(d.offset().top+d.outerHeight())<=Math.round(c.offset().top)),start()},0)}),test("should place tooltip inside viewport",function(){stop();var a=$("<div/>").css({position:"absolute",width:200,height:200,bottom:0,left:0}).appendTo("#qunit-fixture");$('<a href="#" title="Very very very very very very very very long tooltip">Hover me</a>').css({position:"absolute",top:0,left:0}).appendTo(a).bootstrapTooltip({placement:"top"}).bootstrapTooltip("show"),setTimeout(function(){ok($(".tooltip").offset().left>=0),start()},0)}),test("should show tooltip if leave event hasn't occurred before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip is not faded in")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip is faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok($(".tooltip").is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"100ms: tooltip still faded in"),a.trigger("mouseenter")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip still faded in"),start()},200)},0),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"250ms: tooltip not faded in"),start()},250),a.trigger("mouseenter")}),test("should wait 200ms before hiding the tooltip",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"100ms: tooltip still faded in")},100),setTimeout(function(){ok(!a.data("bs.tooltip").$tip.is(".in"),"200ms: tooltip removed"),start()},200)},0),a.trigger("mouseenter")}),test("should correctly position tooltips on SVG elements",function(){if(!window.SVGElement)return void expect(0);stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<div style="position: fixed; top: 0; left: 0;">  <svg width="200" height="200">    <circle cx="100" cy="100" r="10" title="m" id="theCircle" />  </svg></div>');var c=$("#theCircle");c.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();b.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should correctly determine auto placement based on container rather than parent",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; display: block; font-size: 12px; line-height: 1.4; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; font-family: Helvetica; text-align: center; }#trigger-parent {  position: fixed;  top: 100px;  right: 17px;}</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<span id="trigger-parent"><a id="tt-trigger" title="If a_larger_text is written here, it won\'t fit using older broken version of BS">HOVER OVER ME</a></span>');var c=$("#tt-trigger");c.on("shown.bs.tooltip",function(){var a=$(".tooltip-inner"),b=a.offset().left+a.width(),d=c.offset().left;ok(d>b,"tooltip with auto left placement, when near the right edge of the viewport, gets left placement"),c.bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"auto left",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should not reload the tooltip on subsequent mouseenter events",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a}),$("#tt-outer").trigger("mouseenter");var c=$("#tt-content").text();$("#tt-content").trigger("mouseenter"),equal(c,$("#tt-content").text())}),test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a});var c=b.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var d=$("#tt-content").text();$("#tt-outer").trigger("mouseleave"),equal(d,$("#tt-content").text()),ok("out"==c.hoverState,'the tooltip hoverState should be set to "out"'),$("#tt-content").trigger("mouseenter"),ok("in"==c.hoverState,'the tooltip hoverState should be set to "in"'),equal(d,$("#tt-content").text())}),test("should position arrow correctly when tooltip is moved to not appear offscreen",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip-arrow { position: absolute; width: 0; height: 0; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; }</style>",b=$(a).appendTo("head");$('<a href="#" title="tooltip title" style="position: absolute; bottom: 0; right: 0;">Foobar</a>').appendTo("body").on("shown.bs.tooltip",function(){var a=$(this).data("bs.tooltip").$tip.find(".tooltip-arrow").attr("style");ok(/left/i.test(a)&&!/top/i.test(a),"arrow positioned correctly"),$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}).bootstrapTooltip("show")}),test("should correctly position tooltips on transformed elements",function(){var a=document.documentElement.style;if(!("transform"in a||"webkitTransform"in a||"msTransform"in a))return void expect(0);stop();var b="<style>#qunit-fixture { top: 0; left: 0; }.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }#target { position: absolute; top: 100px; left: 50px; width: 100px; height: 200px; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }</style>",c=$(b).appendTo("head"),d=$('<div id="target" title="1"/>').appendTo("#qunit-fixture");d.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();c.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),ok(Math.abs(a.top-126)<=1,"tooltip has correct vertical location"),d.bootstrapTooltip("hide"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),d.bootstrapTooltip("show")})}),$(function(){"use strict";module("tooltip plugin"),test("should be defined on jquery object",function(){ok($(document.body).tooltip,"popover method is defined")}),module("tooltip",{setup:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},teardown:function(){$.fn.tooltip=$.fn.bootstrapTooltip,delete $.fn.bootstrapTooltip}}),test("should provide no conflict",function(){strictEqual($.fn.tooltip,void 0,"tooltip was set back to undefined (org value)")}),test("should return jquery collection containing the element",function(){var a=$("<div/>"),b=a.bootstrapTooltip();ok(b instanceof $,"returns jquery collection"),strictEqual(b[0],a[0],"collection contains element")}),test("should expose default settings",function(){ok($.fn.bootstrapTooltip.Constructor.DEFAULTS,"defaults is defined")}),test("should empty title attribute",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("title"),"","title attribute was emptied")}),test("should add data attribute for referencing original title",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();strictEqual(a.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")}),test("should add aria-describedby to the trigger on show",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show"),b=$(".tooltip").attr("id");strictEqual($("#"+b).length,1,"has a unique id"),strictEqual($(".tooltip").attr("aria-describedby"),a.attr("id"),"tooltip id and aria-describedby on trigger match"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")}),test("should remove aria-describedby from trigger on hide",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");a.bootstrapTooltip("show"),ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby"),a.bootstrapTooltip("hide"),ok(!a[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")}),test("should assign a unique id tooltip element",function(){$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var a=$(".tooltip").attr("id");strictEqual($("#"+a).length,1,"tooltip has unique id"),strictEqual(a.indexOf("tooltip"),0,"tooltip id has prefix")}),test("should place tooltips relative to placement option",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});a.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should allow html entities",function(){var a=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0});a.bootstrapTooltip("show"),notEqual($(".tooltip b").length,0,"b tag was inserted"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should respect custom classes",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});a.bootstrapTooltip("show"),ok($(".tooltip").hasClass("some-class"),"custom class is present"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed")}),test("should fire show event",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){ok(!0,"show event fired"),start()}).bootstrapTooltip("show")}),test("should fire shown event",function(){stop(),$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){ok(!0,"shown was called"),start()}).bootstrapTooltip("show")}),test("should not fire shown event when show was prevented",function(){stop(),$('<div title="tooltip title"/>').on("show.bs.tooltip",function(a){a.preventDefault(),ok(!0,"show event fired"),start()}).on("shown.bs.tooltip",function(){ok(!1,"shown event fired")}).bootstrapTooltip("show")}),test("should fire hide event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){ok(!0,"hide event fired"),start()}).bootstrapTooltip("show")}),test("should fire hidden event",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){ok(!0,"hidden event fired"),start()}).bootstrapTooltip("show")}),test("should not fire hidden event when hide was prevented",function(){stop(),$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(a){a.preventDefault(),ok(!0,"hide event fired"),start()}).on("hidden.bs.tooltip",function(){ok(!1,"hidden event fired")
}).bootstrapTooltip("show")}),test("should destroy tooltip",function(){var a=$("<div/>").bootstrapTooltip().on("click.foo",function(){});ok(a.data("bs.tooltip"),"tooltip has data"),ok($._data(a[0],"events").mouseover&&$._data(a[0],"events").mouseout,"tooltip has hover events"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event"),a.bootstrapTooltip("show"),a.bootstrapTooltip("destroy"),ok(!a.hasClass("in"),"tooltip is hidden"),ok(!$._data(a[0],"bs.tooltip"),"tooltip does not have data"),equal($._data(a[0],"events").click[0].namespace,"foo","tooltip still has click.foo"),ok(!$._data(a[0],"events").mouseover&&!$._data(a[0],"events").mouseout,"tooltip does not have hover events")}),test("should show tooltip with delegate selector on click",function(){var a=$('<div><a href="#" rel="tooltip" title="Another tooltip"/></div>').appendTo("#qunit-fixture").bootstrapTooltip({selector:'a[rel="tooltip"]',trigger:"click"});a.find("a").click(),ok($(".tooltip").is(".fade.in"),"tooltip is faded in"),a.find("a").click(),equal($(".tooltip").length,0,"tooltip was removed from dom")}),test("should show tooltips with different delegate selectors on the same node on click",function(){var a='<div><a href="#" class="first" rel="tooltip" title="First delegated tooltip"/><a href="#" class="second" rel="tooltip" title="Second delegated tooltip"/></div>',b=$(a).append().appendTo("#qunit-fixture").bootstrapTooltip({selector:'a.first[rel="tooltip"]',trigger:"click"}).bootstrapTooltip({selector:'a.second[rel="tooltip"]',trigger:"click"});b.find("a.first").click(),ok($(".tooltip").is(".fade.in"),"first tooltip is faded in"),b.find("a.first").click(),equal($(".tooltip").length,0,"first tooltip was removed from dom"),b.find("a.second").click(),ok($(".tooltip").is(".fade.in"),"second tooltip is faded in"),b.find("a.second").click(),equal($(".tooltip").length,0,"second tooltip was removed from dom")}),test("should show tooltip when toggle is called",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle"),ok($(".tooltip").is(".fade.in"),"tooltip is faded in")}),test("should hide previously shown tooltip when toggle is called on tooltip",function(){$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show"),$(".tooltip").bootstrapTooltip("toggle"),ok($(".tooltip").not(".fade.in"),"tooltip was faded out")}),test("should place tooltips inside body when container is body",function(){var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body"),equal($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent"),a.bootstrapTooltip("hide"),equal($("body > .tooltip").length,0,"tooltip was removed from dom")}),test("should add position class before positioning so that position-specific styles are taken into account",function(){var a="<style>.tooltip.right { white-space: nowrap; }.tooltip.right .tooltip-inner { max-width: none; }</style>",b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:null}).bootstrapTooltip("show"),e=c.find(".tooltip"),f=Math.round(d.offset().top+d[0].offsetHeight/2-e[0].offsetHeight/2),g=Math.round(e.offset().top),h=f-g;ok(1>=h&&h>=-1),d.bootstrapTooltip("hide"),c.remove(),b.remove()}),test("should use title attribute for tooltip text",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should prefer title attribute over title option",function(){var a=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should use title option",function(){var a=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});a.bootstrapTooltip("show"),equal($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set"),a.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom")}),test("should be placed dynamically with the dynamic placement option",function(){var a=$('<style> a[rel="tooltip"] { display: inline-block; position: absolute; } </style>'),b=$("<div/>").css({position:"absolute",overflow:"hidden",width:600,height:400,top:0,left:0}).appendTo(document.body),c=$('<div style="left: 0; top: 0;" rel="tooltip" title="Top tooltip">Top Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto"});c.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"top positioned tooltip removed from dom");var d=$('<div style="right: 0;" rel="tooltip" title="Right tooltip">Right Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"right auto"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".left"),"right positioned tooltip is dynamically positioned left"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"right positioned tooltip removed from dom");var e=$('<div style="left: 0;" rel="tooltip" title="Left tooltip">Left Dynamic Tooltip</div>').appendTo(b).bootstrapTooltip({placement:"auto left"});e.bootstrapTooltip("show"),ok($(".tooltip").is(".right"),"left positioned tooltip is dynamically positioned right"),e.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"left positioned tooltip removed from dom"),b.remove(),a.remove()}),test('should position tip on top if viewport has enough space and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; padding-top: 50px }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".top"),"top positioned tooltip is dynamically positioned to top"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should position tip on bottom if the tip\'s dimension exceeds the viewport area and placement is "auto top"',function(){var a='<style>body { padding-top: 100px; }#section { height: 300px; border: 1px solid red; }div[rel="tooltip"] { width: 150px; border: 1px solid blue; }</style>',b=$(a).appendTo("head"),c=$('<div id="section"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip"/>').appendTo(c).bootstrapTooltip({placement:"auto top",viewport:"#section"});d.bootstrapTooltip("show"),ok($(".tooltip").is(".bottom"),"top positioned tooltip is dynamically positioned to bottom"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport has enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(100),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport doesn\'t have enough room if the given placement is "auto top"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { padding: 200px 0 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"top auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on bottom whenever scrollable viewport has enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.spacer { height: 400px; }.spacer:first-child { height: 200px; }.tooltip-item { width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).before('<div class="spacer"/>').after('<div class="spacer"/>').bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(200),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.bottom.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test('should display the tip on top whenever scrollable viewport doesn\'t have enough room if the given placement is "auto bottom"',function(){var a="<style>#scrollable-div { height: 200px; overflow: auto; }.tooltip-item { margin-top: 400px; width: 150px; }</style>",b=$(a).appendTo("head"),c=$('<div id="scrollable-div"/>').appendTo("#qunit-fixture"),d=$('<div rel="tooltip" title="tip" class="tooltip-item">Tooltip Item</div>').appendTo(c).bootstrapTooltip({placement:"bottom auto",viewport:"#scrollable-div"});$("#scrollable-div").scrollTop(400),d.bootstrapTooltip("show"),ok($(".tooltip").is(".fade.top.in"),"has correct classes applied"),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the top of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),equal(Math.round(c.find(".tooltip").offset().top),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),b.remove()}),test("should adjust the tip's top position when up against the bottom of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="bottom: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"right",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().top),Math.round($(window).height()-12-e[0].offsetHeight)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the left of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("#qunit-fixture"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; left: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show"),strictEqual(Math.round(c.find(".tooltip").offset().left),12),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip's left position when up against the right of the viewport",function(){var a='<style>.tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$("<div/>").appendTo("body"),d=$('<a href="#" rel="tooltip" title="tip" style="top: 0px; right: 0px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:{selector:"body",padding:12}});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round($(window).width()-12-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should adjust the tip when up against the right of an arbitrary viewport",function(){var a='<style>.tooltip, .tooltip .tooltip-inner { width: 200px; height: 200px; max-width: none; }.container-viewport { position: absolute; top: 50px; left: 60px; width: 300px; height: 300px; }a[rel="tooltip"] { position: fixed; }</style>',b=$(a).appendTo("head"),c=$('<div class="container-viewport"/>').appendTo(document.body),d=$('<a href="#" rel="tooltip" title="tip" style="top: 50px; left: 350px;"/>').appendTo(c).bootstrapTooltip({placement:"bottom",viewport:".container-viewport"});d.bootstrapTooltip("show");var e=c.find(".tooltip");strictEqual(Math.round(e.offset().left),Math.round(60+c.width()-e[0].offsetWidth)),d.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),c.remove(),b.remove()}),test("should not error when trying to show an auto-placed tooltip that has been removed from the dom",function(){var a=!0,b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"auto"});try{b.bootstrapTooltip("show")}catch(c){a=!1,console.log(c)}ok(a,".tooltip('show') should not throw an error if element no longer is in dom")}),test("should place tooltip on top of element",function(){stop();var a='<div><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>',b=$(a).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture"),c=b.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:!1}).bootstrapTooltip("show"),d=b.find(".tooltip");setTimeout(function(){ok(Math.round(d.offset().top+d.outerHeight())<=Math.round(c.offset().top)),start()},0)}),test("should place tooltip inside viewport",function(){stop();var a=$("<div/>").css({position:"absolute",width:200,height:200,bottom:0,left:0}).appendTo("#qunit-fixture");$('<a href="#" title="Very very very very very very very very long tooltip">Hover me</a>').css({position:"absolute",top:0,left:0}).appendTo(a).bootstrapTooltip({placement:"top"}).bootstrapTooltip("show"),setTimeout(function(){ok($(".tooltip").offset().left>=0),start()},0)}),test("should show tooltip if leave event hasn't occurred before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip is not faded in")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip is faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok($(".tooltip").is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"100ms: tooltip still faded in"),a.trigger("mouseenter")},100),setTimeout(function(){ok($(".tooltip").is(".fade.in"),"200ms: tooltip still faded in"),start()},200)},0),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),start()},200),a.trigger("mouseenter")}),test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),a.trigger("mouseout")},100),setTimeout(function(){ok(!$(".tooltip").is(".fade.in"),"250ms: tooltip not faded in"),start()},250),a.trigger("mouseenter")}),test("should wait 200ms before hiding the tooltip",function(){stop();var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"1ms: tooltip faded in"),a.trigger("mouseout"),setTimeout(function(){ok(a.data("bs.tooltip").$tip.is(".fade.in"),"100ms: tooltip still faded in")},100),setTimeout(function(){ok(!a.data("bs.tooltip").$tip.is(".in"),"200ms: tooltip removed"),start()},200)},0),a.trigger("mouseenter")}),test("should correctly position tooltips on SVG elements",function(){if(!window.SVGElement)return void expect(0);stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<div style="position: fixed; top: 0; left: 0;">  <svg width="200" height="200">    <circle cx="100" cy="100" r="10" title="m" id="theCircle" />  </svg></div>');var c=$("#theCircle");c.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();b.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),c.bootstrapTooltip("hide"),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should correctly determine auto placement based on container rather than parent",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; display: block; font-size: 12px; line-height: 1.4; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; font-family: Helvetica; text-align: center; }#trigger-parent {  position: fixed;  top: 100px;  right: 17px;}</style>",b=$(a).appendTo("head");$("#qunit-fixture").append('<span id="trigger-parent"><a id="tt-trigger" title="If a_larger_text is written here, it won\'t fit using older broken version of BS">HOVER OVER ME</a></span>');var c=$("#tt-trigger");c.on("shown.bs.tooltip",function(){var a=$(".tooltip-inner"),b=a.offset().left+a.width(),d=c.offset().left;ok(d>b,"tooltip with auto left placement, when near the right edge of the viewport, gets left placement"),c.bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"auto left",trigger:"manual"}),c.bootstrapTooltip("show")}),test("should not reload the tooltip on subsequent mouseenter events",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a}),$("#tt-outer").trigger("mouseenter");var c=$("#tt-content").text();$("#tt-content").trigger("mouseenter"),equal(c,$("#tt-content").text())}),test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(){var a=function(){var a=$.fn.bootstrapTooltip.Constructor.prototype.getUID("tooltip");return'<p id="tt-content">'+a+"</p><p>"+a+"</p><p>"+a+"</p>"},b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:b,title:a});var c=b.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var d=$("#tt-content").text();$("#tt-outer").trigger("mouseleave"),equal(d,$("#tt-content").text()),ok("out"==c.hoverState,'the tooltip hoverState should be set to "out"'),$("#tt-content").trigger("mouseenter"),ok("in"==c.hoverState,'the tooltip hoverState should be set to "in"'),equal(d,$("#tt-content").text())}),test("should position arrow correctly when tooltip is moved to not appear offscreen",function(){stop();var a="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip-arrow { position: absolute; width: 0; height: 0; }.tooltip .tooltip-inner { max-width: 200px; padding: 3px 8px; }</style>",b=$(a).appendTo("head");$('<a href="#" title="tooltip title" style="position: absolute; bottom: 0; right: 0;">Foobar</a>').appendTo("body").on("shown.bs.tooltip",function(){var a=$(this).data("bs.tooltip").$tip.find(".tooltip-arrow").attr("style");ok(/left/i.test(a)&&!/top/i.test(a),"arrow positioned correctly"),$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.remove(),$(this).remove(),equal($(".tooltip").length,0,"tooltip removed from dom"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}).bootstrapTooltip("show")}),test("should correctly position tooltips on transformed elements",function(){var a=document.documentElement.style;if(!("transform"in a||"webkitTransform"in a||"msTransform"in a))return void expect(0);stop();var b="<style>#qunit-fixture { top: 0; left: 0; }.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }#target { position: absolute; top: 100px; left: 50px; width: 100px; height: 200px; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }</style>",c=$(b).appendTo("head"),d=$('<div id="target" title="1"/>').appendTo("#qunit-fixture");d.on("shown.bs.tooltip",function(){var a=$(".tooltip").offset();c.remove(),ok(Math.abs(a.left-88)<=1,"tooltip has correct horizontal location"),ok(Math.abs(a.top-126)<=1,"tooltip has correct vertical location"),d.bootstrapTooltip("hide"),start()}).bootstrapTooltip({container:"body",placement:"top",trigger:"manual"}),d.bootstrapTooltip("show")})});